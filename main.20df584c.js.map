{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tableBody","appendRow","removeRow","appendColumn","removeColumn","maxCount","minCount","rowsCount","rows","length","columnsCount","cells","buttonStatus","addButton","removeButton","isRow","lengthCount","disabled","body","addEventListener","clicked","target","tagName","className","split","newRow","repeat","insertAdjacentHTML","deleteRow","i","insertCell","deleteCell"],"mappings":";AAAA,aAEA,IAAMA,EAAQC,SAASC,cAAc,UAC/BC,EAAYF,SAASC,cAAc,SACnCE,EAAYH,SAASC,cAAc,eACnCG,EAAYJ,SAASC,cAAc,eACnCI,EAAeL,SAASC,cAAc,kBACtCK,EAAeN,SAASC,cAAc,kBACtCM,EAAW,GACXC,EAAW,EAEbC,EAAYV,EAAMW,KAAKC,OACvBC,EAAeb,EAAMW,KAAK,GAAGG,MAAMF,OAEvC,SAASG,EAAaC,EAAWC,EAAcC,GAC7CR,EAAYV,EAAMW,KAAKC,OACvBC,EAAeb,EAAMW,KAAK,GAAGG,MAAMF,OAE7BO,IAAAA,EAAcD,EAAQR,EAAYG,EAExCG,EAAUI,SAAWD,GAAeX,EACpCS,EAAaG,SAAWD,GAAeV,EAGzCM,EAAaX,EAAWC,GAAW,GACnCU,EAAaT,EAAcC,GAAc,GAEzCN,SAASoB,KAAKC,iBAAiB,QAAS,SAACC,GACnCA,GAA2B,WAA3BA,EAAQC,OAAOC,QAIXF,OAAAA,EAAQC,OAAOE,UAAUC,MAAM,KAAK,IACrC,IAAA,aACGC,IAAAA,EACK,OAAA,OAAA,YAAYC,OAAO7B,EAAMW,KAAK,GAAGG,MAAMF,QADlD,SAGAT,EAAU2B,mBAAmB,YAAaF,GAE1Cb,EAAaX,EAAWC,GAAW,GACnC,MAEG,IAAA,aACHL,EAAM+B,UAAU,GAChBhB,EAAaX,EAAWC,GAAW,GACnC,MACG,IAAA,gBACE,IAAA,IAAI2B,EAAI,EAAGA,EAAIhC,EAAMW,KAAKC,OAAQoB,IACrChC,EAAMW,KAAKqB,GAAGC,aAGhBlB,EAAaT,EAAcC,GAAc,GACzC,MAEG,IAAA,gBACE,IAAA,IAAIyB,EAAI,EAAGA,EAAIhC,EAAMW,KAAKC,OAAQoB,IACrChC,EAAMW,KAAKqB,GAAGE,WAAW,GAG3BnB,EAAaT,EAAcC,GAAc,GACzC,MAEF,QACE","file":"main.20df584c.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('.field');\nconst tableBody = document.querySelector('tbody');\nconst appendRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row');\nconst appendColumn = document.querySelector('.append-column');\nconst removeColumn = document.querySelector('.remove-column');\nconst maxCount = 10;\nconst minCount = 2;\n\nlet rowsCount = table.rows.length;\nlet columnsCount = table.rows[0].cells.length;\n\nfunction buttonStatus(addButton, removeButton, isRow) {\n  rowsCount = table.rows.length;\n  columnsCount = table.rows[0].cells.length;\n\n  const lengthCount = isRow ? rowsCount : columnsCount;\n\n  addButton.disabled = lengthCount >= maxCount;\n  removeButton.disabled = lengthCount <= minCount;\n}\n\nbuttonStatus(appendRow, removeRow, true);\nbuttonStatus(appendColumn, removeColumn, false);\n\ndocument.body.addEventListener('click', (clicked) => {\n  if (clicked.target.tagName !== 'BUTTON') {\n    return;\n  }\n\n  switch (clicked.target.className.split(' ')[0]) {\n    case 'append-row':\n      const newRow\n        = `<tr>${'<td></td>'.repeat(table.rows[0].cells.length)}</tr>`;\n\n      tableBody.insertAdjacentHTML('beforeend', newRow);\n\n      buttonStatus(appendRow, removeRow, true);\n      break;\n\n    case 'remove-row':\n      table.deleteRow(0);\n      buttonStatus(appendRow, removeRow, true);\n      break;\n    case 'append-column':\n      for (let i = 0; i < table.rows.length; i++) {\n        table.rows[i].insertCell();\n      }\n\n      buttonStatus(appendColumn, removeColumn, false);\n      break;\n\n    case 'remove-column':\n      for (let i = 0; i < table.rows.length; i++) {\n        table.rows[i].deleteCell(0);\n      }\n\n      buttonStatus(appendColumn, removeColumn, false);\n      break;\n\n    default:\n      return;\n  };\n});\n"]}